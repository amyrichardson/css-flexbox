/* TUTORIAL ONE */
.stepperInput {
      /**
   * Setting display to flex makes this container lay
   * out its children using flexbox. By default, it 
   * orders items horizontally, top-aligned.
   * This has a similar effect to setting the children
   * to have display: inline-block.
   */
    display: flex; 
}

.stepperInput__input {
    border-left: 0;
    border-right: 0;
    width: 60px;
    text-align: center;
  }

  .button {
    cursor: pointer; /*cursor is a pointer while over buttons */
    padding: 5px 15px;
    color: #FFFFFF;
    background-color: #4EBBE4;
    font-size: 12px;
    border: 1px solid #16A2D7;
    border-radius: 4px;
  }

  .button--addOnLeft {
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;
  }

  .button--addOnRight {
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
  }


.input {
    border: 1px solid #D7DBDD;
    padding: 0 10px;
    border-radius: 0;
    box-shadow: none;
  }



  /* TUTORIAL TWO */
  .tabs {
    /**
     * Setting display to flex makes this container lay
     * out its children using flexbox, the exact same
     * as in the above "Stepper input" example.
     */
    display: flex;
    border-bottom: 1px solid #D7DBDD;
  }

  .tab {
    cursor: pointer;
    padding: 5px 30px;
    color: #16A2D7;
    font-size: 12px;
    border-bottom: 2px solid transparent;
  }

  .tab.is-tab-selected {
    border-bottom-color: #4EBBE4; /* will be useful in projects...*/
  }



  /* TUTORIAL THREE */
  .siteHeader {
    /**
     * Lay out the children of this container with
     * flexbox, which is horizontal by default.
     */
    display: flex;
  
    /**
     * Make the container put as much space as possible
     * between its children, with the children at either
     * end laying flush against the container's edges.
     */
    justify-content: space-between;
  
    padding: 10px;
    background-color: #56727C;
  }

  .siteHeader__section {
    /**
     * Lay out the children of this container with
     * flexbox.
     */
    display: flex;

    /**
     * Align the children in the center, along
     * the main axis. By default the children will
     * align along their top edges.
     */
    align-items: center;
  }

  .siteHeader__item {
    padding: 5px 15px;
    font-size: 12px;
  }

  .siteHeader__item + .siteHeader__item {
    margin-left: 5px;
  }

  .siteHeader__item.is-site-header-item-selected {
    color: #FFFFFF;
    background-color: #415F69;
    border-radius: 4px;
  }

  .siteHeaderLogo {
    font-size: 20px;
    line-height: 0;
    color: white;
  }

  .siteHeaderButton {
    cursor: pointer;
    color: #D9E9EF;
  }



/*TUTORIAL FOUR*/
.formFooter {
/**
* Lay out the children of this container with
* flexbox, which is horizontal by default.
*/
display: flex;

/**
* Make the container put as much space as possible
* between its children, with the children at either
* end laying flush against the container's edges.
*/
justify-content: space-between;

/**
* Align the children in the center, along
* the main axis, which is horizontal in this case.
*/
align-items: center;

border-top: 1px solid #D7DBDD;
padding: 10px;
}

.formFooter__section {
/**
* This container orders items horizontally.
*/
display: flex;

/**
* It aligns them vertically in the center.
*/
align-items: center;
}

.formFooter__item + .formFooter__item {
margin-left: 5px;
}

.formFooterFeedback {
color: #86969C;
font-size: 12px;
line-height: 0;
}

.formFooterSpinner {
animation: formFooterSpinner 1s infinite steps(8, end);
}

@keyframes formFooterSpinner {
0%   { transform: rotate(0deg); }
100% { transform: rotate(360deg); }
}

.button--clear {
color: #16A2D7;
background-color: #FFFFFF;
border: 1px solid #FFFFFF;
}





/*TUTORIAL FIVE */
.sideBar {
    /**
     * This container orders items according to flexbox
     * rules. By default, this would arrange its children
     * horizontally. However, the next property...
     */
    display: flex;
  
    /**
     * ...sets the main axis to be vertical instead of
     * horizontal, so now the children are laid out
     * vertically, from top to bottom.
     */
    flex-direction: column;
  
    /**
     * It will also put as much space as possible
     * between its children, with the children at either end
     * laying flush against the container's edges.
     */
    justify-content: space-between;
  
    height: 300px;
    width: 150px;
    border-right: 1px solid #D7DBDD;
    background-color: #FCFDFD;
    padding: 10px;
  }
  
    .sideBar__item {
      cursor: pointer;
      padding: 5px 10px;
      color: #16A2D7;
      font-size: 12px;
    }
  
    .sideBar__item.is-side-bar-item-selected {
      background-color: #EEF3F5;
      border-radius: 4px;
    }